# Generated by Django 2.0.5 on 2018-08-09 14:25

import analyses.models
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import picklefield.fields


class Migration(migrations.Migration):

    dependencies = [
        ('analyses', '0002_first_data'),
    ]

    operations = [
        migrations.CreateModel(
            name='ana_file',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anaid', models.ForeignKey(db_column='anaid', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.Analysis')),
            ],
            options={
                'db_table': 'ana_file',
            },
        ),
        migrations.CreateModel(
            name='ana_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ana_name', models.CharField(max_length=50)),
                ('author', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='BSM_Model',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('UFO_Link', models.TextField()),
                ('author', models.CharField(max_length=50)),
                ('date_downloaded', models.DateField()),
            ],
            options={
                'db_table': 'bsm_model',
            },
        ),
        migrations.CreateModel(
            name='counter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sumw', models.FloatField(null=True)),
                ('sumw2', models.FloatField(null=True)),
                ('numEntries', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='dat_database',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='dat_files',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('dat_store', models.FileField(upload_to=analyses.models.get_dat_path)),
                ('parent', models.ForeignKey(db_column='dat_database', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.dat_database')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Download',
            fields=[
                ('runcard_name', models.CharField(default='090820181425', max_length=200, primary_key=True, serialize=False)),
                ('Model', models.CharField(choices=[('Test_Model', 'Test_Model'), ('Test_Model2', 'Test_Model2'), ('Test_Model3', 'Test_Model3'), ('Test_Model4', 'Test_Model4'), ('Test_Model5', 'Test_Model5'), ('Test_Model6', 'Test_Model6'), ('Test_Model7', 'Test_Model7'), ('Test_Model_8', 'Test_Model_8'), ('Test_Model_9', 'Test_Model_9')], default='', max_length=200)),
                ('Parameter_Card', models.FileField(default='', upload_to='analyses/parameters-cards/')),
            ],
        ),
        migrations.CreateModel(
            name='histo1_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xlow', models.FloatField(null=True)),
                ('xhigh', models.FloatField(null=True)),
                ('sumw', models.FloatField(null=True)),
                ('sumw2', models.FloatField(null=True)),
                ('sumwx', models.FloatField(null=True)),
                ('sumwx2', models.FloatField(null=True)),
                ('numEntries', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='histo_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=100)),
                ('dat_store', models.FileField(upload_to=analyses.models.get_data_path)),
            ],
        ),
        migrations.CreateModel(
            name='histo_header',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded', models.FileField(upload_to=analyses.models.get_histo_path)),
            ],
        ),
        migrations.CreateModel(
            name='histo_images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to=analyses.models.get_data_path)),
                ('parent', models.ForeignKey(db_column='histo_header', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.histo_header')),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('key_word', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'keywords_list',
            },
        ),
        migrations.CreateModel(
            name='Linked_keys',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anaid', models.ForeignKey(db_column='anaid', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.Analysis')),
                ('key_word', models.ForeignKey(db_column='keyword', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.Keyword')),
            ],
            options={
                'db_table': 'linked_keywords',
            },
        ),
        migrations.CreateModel(
            name='map_header',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analyses', models.CharField(max_length=50)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='map_pickle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickle', picklefield.fields.PickledObjectField(editable=False)),
                ('parent', models.ForeignKey(db_column='map_header', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.map_header')),
            ],
        ),
        migrations.CreateModel(
            name='overflow_underflow_histo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_type', models.CharField(max_length=50)),
                ('sumw', models.FloatField(null=True)),
                ('sumw2', models.FloatField(null=True)),
                ('sumwx', models.FloatField(null=True)),
                ('sumwx2', models.FloatField(null=True)),
                ('numEntries', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='overflow_underflow_profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_type', models.CharField(max_length=50)),
                ('sumw', models.FloatField(null=True)),
                ('sumw2', models.FloatField(null=True)),
                ('sumwx', models.FloatField(null=True)),
                ('sumwx2', models.FloatField(null=True)),
                ('sumwy', models.FloatField(null=True)),
                ('sumwy2', models.FloatField(null=True)),
                ('numEntries', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='profile1_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xlow', models.FloatField(null=True)),
                ('xhigh', models.FloatField(null=True)),
                ('sumw', models.FloatField(null=True)),
                ('sumw2', models.FloatField(null=True)),
                ('sumwx', models.FloatField(null=True)),
                ('sumwx2', models.FloatField(null=True)),
                ('sumwy', models.FloatField(null=True)),
                ('sumwy2', models.FloatField(null=True)),
                ('numEntries', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='results_analyses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('xyd', models.CharField(default='', max_length=50, null=True)),
                ('Path', models.CharField(default='', max_length=50, null=True)),
                ('Title', models.CharField(default='', max_length=50, null=True)),
                ('Type', models.CharField(default='', max_length=50, null=True)),
                ('XLabel', models.CharField(default='', max_length=50, null=True)),
                ('YLabel', models.CharField(default='', max_length=50, null=True)),
                ('ScaledBy', models.FloatField(default=1, null=True)),
                ('PolyMarker', models.CharField(default='', max_length=50, null=True)),
                ('ErrorBars', models.CharField(default='', max_length=50, null=True)),
                ('LineColor', models.CharField(default='', max_length=50, null=True)),
                ('yodamerge_scale', models.CharField(default='', max_length=50, null=True)),
                ('mean', models.FloatField(default=0, null=True)),
                ('area', models.FloatField(default=0, null=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='results_header',
            fields=[
                ('author', models.CharField(default='Contur User', max_length=50)),
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('mc_ver', models.CharField(default='0.0.0', max_length=20)),
                ('contur_ver', models.CharField(default='0.0.0', max_length=20)),
                ('type', models.CharField(choices=[('Histogram', 'Histogram'), ('Heatmap', 'Heatmap')], max_length=200)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='results', to='analyses.results_header')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='results_position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='position', to='analyses.results_header')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='runcard',
            fields=[
                ('author', models.CharField(default='Contur User', max_length=50)),
                ('runcard_name', models.CharField(default='090820181425', max_length=50, primary_key=True, serialize=False)),
                ('param_card', models.TextField(max_length=500)),
                ('modelname', models.ForeignKey(db_column='name', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.BSM_Model')),
            ],
            options={
                'db_table': 'runcard_export',
            },
        ),
        migrations.CreateModel(
            name='scatter1_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xval', models.FloatField(null=True)),
                ('xerr_n', models.FloatField(null=True)),
                ('xerr_p', models.FloatField(null=True)),
                ('parent', models.ForeignKey(db_column='results_link', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.results_analyses')),
            ],
        ),
        migrations.CreateModel(
            name='scatter2_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xval', models.FloatField(null=True)),
                ('xerr_n', models.FloatField(null=True)),
                ('xerr_p', models.FloatField(null=True)),
                ('yval', models.FloatField(null=True)),
                ('yerr_n', models.FloatField(null=True)),
                ('yerr_p', models.FloatField(null=True)),
                ('parent', models.ForeignKey(db_column='results_link', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.results_analyses')),
            ],
        ),
        migrations.CreateModel(
            name='scatter3_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xval', models.FloatField(null=True)),
                ('xerr_n', models.FloatField(null=True)),
                ('xerr_p', models.FloatField(null=True)),
                ('yval', models.FloatField(null=True)),
                ('yerr_n', models.FloatField(null=True)),
                ('yerr_p', models.FloatField(null=True)),
                ('zval', models.FloatField(null=True)),
                ('zerr_n', models.FloatField(null=True)),
                ('zerr_p', models.FloatField(null=True)),
                ('parent', models.ForeignKey(db_column='results_link', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.results_analyses')),
            ],
        ),
        migrations.CreateModel(
            name='summary_text',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary_store', models.FileField(upload_to=analyses.models.get_sum_path)),
                ('parent', models.ForeignKey(db_column='dat_database', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.dat_database')),
            ],
        ),
        migrations.CreateModel(
            name='used_analyses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ana_name', models.ForeignKey(db_column='ana_name', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.ana_list')),
                ('modelname', models.ForeignKey(db_column='model', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.BSM_Model')),
            ],
            options={
                'db_table': 'used_analyses',
            },
        ),
        migrations.AddField(
            model_name='results_header',
            name='runcard',
            field=models.ForeignKey(db_column='runcard_name', default='', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.runcard'),
        ),
        migrations.AddField(
            model_name='results_analyses',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to='analyses.results_position'),
        ),
        migrations.AddField(
            model_name='profile1_data',
            name='parent',
            field=models.ForeignKey(db_column='results_link', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.results_analyses'),
        ),
        migrations.AddField(
            model_name='overflow_underflow_profile',
            name='parent',
            field=models.ForeignKey(db_column='results_link', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.results_analyses'),
        ),
        migrations.AddField(
            model_name='overflow_underflow_histo',
            name='parent',
            field=models.ForeignKey(db_column='results_link', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.results_analyses'),
        ),
        migrations.AddField(
            model_name='map_header',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='map', to='analyses.results_header'),
        ),
        migrations.AddField(
            model_name='histo_header',
            name='results_object',
            field=models.ForeignKey(db_column='results_header', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.results_position'),
        ),
        migrations.AddField(
            model_name='histo_data',
            name='parent',
            field=models.ForeignKey(db_column='histo_header', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.histo_header'),
        ),
        migrations.AddField(
            model_name='histo1_data',
            name='parent',
            field=models.ForeignKey(db_column='results_link', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.results_analyses'),
        ),
        migrations.AddField(
            model_name='dat_database',
            name='results_object',
            field=models.ForeignKey(db_column='results_position', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.results_position'),
        ),
        migrations.AddField(
            model_name='counter',
            name='parent',
            field=models.ForeignKey(db_column='results_link', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.results_analyses'),
        ),
        migrations.AddField(
            model_name='ana_file',
            name='linked_ana',
            field=models.ForeignKey(db_column='linked_ana', on_delete=django.db.models.deletion.DO_NOTHING, to='analyses.ana_list'),
        ),
        migrations.AlterUniqueTogether(
            name='used_analyses',
            unique_together={('modelname', 'ana_name')},
        ),
        migrations.AlterUniqueTogether(
            name='runcard',
            unique_together={('runcard_name', 'param_card')},
        ),
        migrations.AlterUniqueTogether(
            name='linked_keys',
            unique_together={('key_word', 'anaid')},
        ),
    ]
